---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { getNextPost, getPrevPost, readingTime, readingTimeValue } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import TableOfContents from "@components/TableOfContents.astro";
import Giscus from "@components/Giscus.astro";
import PostNavigation from "@components/PostNavigation.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import Link from "@components/Link.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const docs = (await getCollection("godot-2d-topdown-template"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return docs.map((doc) => ({
    params: { id: doc.id },
    props: doc,
  }));
}
type Props = CollectionEntry<"godot-2d-topdown-template">;

const collection = (await getCollection("godot-2d-topdown-template"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const nextPost = getNextPost(collection, Astro.params.id);
const prevPost = getPrevPost(collection, Astro.params.id);

const content = Astro.props;
const { Content, headings } = await render(content);
---

<Layout title={content.data.title} description={content.data.description} image={"/res/2d-topdown-template-godot4.png"}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/resources/godot-2d-topdown-template"
        >{
          t("back.to", {
            to: t("docs.index"),
          })
        }</BackToPrevious
      >
    </div>
    <div class="animate my-10 space-y-1">
      <div class="flex items-center gap-1.5">
        {
          content.body && (
            <div class="font-base text-sm">{readingTime(content.body)}</div>
          )
        }
      </div>
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        {content.data.title}
      </h1>
    </div>
    <TableOfContents headings={headings} />
    <article class="animate">
      <Content components={{a: Link}} />
      <div class="mt-24">
        <PostNavigation prevPost={prevPost} nextPost={nextPost} collection="godot-2d-topdown-template" />
      </div>
    </article>
    {
      readingTimeValue(content.body || "") !== "1" && (
        <div class="card mt-12 py-3">
          <p class="text-center">{t("docs.comments.feedback")}</p>
        </div>
        <div class="mt-16">
          <Giscus
            repoName="godot-2d-topdown-template"
            repoId="R_kgDOMmiJ2A"
            categoryId="DIC_kwDOMmiJ2M4CmSTh"
          />
        </div>
      )
    }
  </Container>
</Layout>
