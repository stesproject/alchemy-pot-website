---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { readingTime, readingTimeValue } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import TableOfContents from "@components/TableOfContents.astro";
import Giscus from "@components/Giscus.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const docs = (await getCollection("godot-2d-topdown-template"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return docs.map((doc) => ({
    params: { id: doc.id },
    props: doc,
  }));
}
type Props = CollectionEntry<"godot-2d-topdown-template">;

const doc = Astro.props;
const { Content, headings } = await render(doc);
---

<Layout title={doc.data.title} description={doc.data.description}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/resources/godot-2d-topdown-template"
        >{
          t("back.to", {
            to: t("docs.index"),
          })
        }</BackToPrevious
      >
    </div>
    <div class="animate my-10 space-y-1">
      <div class="flex items-center gap-1.5">
        {
          doc.body && (
            <div class="font-base text-sm">{readingTime(doc.body)}</div>
          )
        }
      </div>
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        {doc.data.title}
      </h1>
    </div>
    <TableOfContents headings={headings} />
    <article class="animate">
      <Content />
    </article>
    {
      readingTimeValue(doc.body || "") !== "1" && (
        <div class="mt-24">
          <Giscus
            repoName="godot-2d-topdown-template"
            repoId="R_kgDOMmiJ2A"
            categoryId="DIC_kwDOMmiJ2M4CmSTh"
          />
        </div>
      )
    }
  </Container>
</Layout>
