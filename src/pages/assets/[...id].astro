---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import BackToPrevious from "@components/BackToPrevious.astro";
import Link from "@components/Link.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const assets = (await getCollection("assets")).sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
  );
  return assets.map((asset) => ({
    params: { id: asset.id },
    props: asset,
  }));
}
type Props = CollectionEntry<"assets">;

const asset = Astro.props;
const { Content } = await render(asset);
---

<Layout title={asset.data.title} description={asset.data.description}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/resources/assets"
        >{t("back.to", {
          to: t("content.assets"),
        })}</BackToPrevious
      >
    </div>
    <div class="animate my-10 space-y-1">
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        {asset.data.title}
      </h1>
      {
        asset.data.downloadUrl && (
          <nav class="flex gap-1">
            <strong>{t("content.download")} </strong>
            {asset.data.downloadUrl.map((download) => (
              <Link href={download.url} external>
                {download.label}
              </Link>
            ))}
          </nav>
        )
      }
    </div>
    <article class="animate">
      <Content />
    </article>
  </Container>
</Layout>
