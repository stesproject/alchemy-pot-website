---
import { getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import BackToPrevious from "@components/BackToPrevious.astro";
import Link from "@components/Link.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { getLangFromUrl, useTranslations } from "@i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const resources = (await getCollection("resources")).sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
  );
  return resources.map((resource) => ({
    params: { id: resource.id },
    props: resource,
  }));
}

const content = Astro.props;
const id = content.id as any;
const resourceContents = (await getCollection(id)).sort(
  (a: any, b: any) => b.data.date.valueOf() - a.data.date.valueOf()
);
const { Content } = await render(content);
---

<Layout
  title={content.data.title}
  description={content.data.description}
  image={content.data.image?.src}
>
  <Container>
    <div class="animate">
      <BackToPrevious href="/resources"
        >{
          t("back.to", {
            to: t("content.resources"),
          })
        }</BackToPrevious
      >
    </div>
    <div class="animate my-10 space-y-1">
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        {content.data.title}
      </h1>
    </div>
    {
      content.data.downloadUrl && (
        <nav class="flex gap-1">
          <strong>{t("content.download")} </strong>
          {content.data.downloadUrl.map((download) => (
            <Link href={download.url}>{download.label}</Link>
          ))}
        </nav>
      )
    }
    <article class="animate">
      <Content components={{ a: Link }} />
    </article>
    <ul class="animate not-prose flex flex-col gap-4">
      {
        resourceContents.map((content: any) => (
          <li>
            <ArrowCard entry={content} />
          </li>
        ))
      }
    </ul>
  </Container>
</Layout>
